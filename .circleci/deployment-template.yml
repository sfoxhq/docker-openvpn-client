apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: crosstower-vpn
    stack: trading
  name: crosstower-vpn
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: crosstower-vpn
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kubernetes.io/change-cause: "$ANNOTATION"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9667'
      labels:
        k8s-app: crosstower-vpn
        collection: microservices
      name: crosstower-vpn
    spec:
      volumes:
      - name: crosstower-vpn-credentials
        secret:
          secretName: crosstower-vpn-credentials
          items:
          # mounted at /data/vpn/fix_srv013.conf
          - key: fix_srv013.conf
            path: fix_srv013.conf
          # mounted at /data/vpn/fix_srv013/<file>
          - key: ca.crt
            path: fix_srv013/ca.crt
          - key: client3938613.crt
            path: fix_srv013/client3938613.crt
          - key: client3938613.key
            path: fix_srv013/client3938613.key
          - key: client3938613.pass
            path: fix_srv013/client3938613.pass
      # initContainers:
      # - name: cred-copier
      #   image: ubuntu:18.04
      #   volumeMounts:
      #   - name: crosstower-vpn-credentials
      #     mountPath: /vpn
      #   command: ['sh', '-c', 'echo cred-copier starting && apt-get update -y && apt-get install -y tree && tree /vpn && mkdir /data && cp -r /vpn /data/vpn/ && tree /data && echo success,exiting']        
      #   args: ["-c", ""]
      #   securityContext:
      #     privileged: true
      #     runAsUser: 0
      containers:
      - image: 808678941459.dkr.ecr.us-east-1.amazonaws.com/openvpn-client:$IMAGE_TAG
        name: crosstower-vpn
        securityContext:
          runAsUser: 0
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        volumeMounts:
        - name: crosstower-vpn-credentials
          mountPath: /vpn
        ports:
        - containerPort: 1080
        env:
        - name: SOCKS_PROXY
          value: "on"
        - name: KILL_SWITCH
          value: "on"
        - name: VPN_LOG_LEVEL
          value: "5"
        - name: PROXY_USERNAME
          valueFrom:
            secretKeyRef:
              name: crosstower-proxy-credentials
              key: key_crosstower_proxy_username_1
        - name: PROXY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: crosstower-proxy-credentials
              key: key_crosstower_proxy_password_1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30


---

apiVersion: v1
kind: Service
metadata:
  name: crosstower-vpn
spec:
  type: ClusterIP
  selector:
    k8s-app: crosstower-vpn
  ports:
  - name: socks-port
    protocol: TCP
    port: 1080
    targetPort: 1080